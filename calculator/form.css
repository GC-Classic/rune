form {
    display:grid; justify-content:center;

    >* {align-self:end;}

    input {
        &.formula:invalid {
            border:red; background: pink;
        }
    }
    input[type=number],input:not([type]) {
        font-size:.8rem;
    }
    input.formula {
        background:rgb(145, 187, 198);
    }
}
:host(char-form) form {
    font-size:1.1rem;
    margin-bottom:.5em; 

    prop-icon {
        vertical-align:middle;
        margin-right:.1em;
    }
    .attacking,h3 {
        color:darkorange;
    }
    .damaging {
        background:lightgoldenrodyellow;
    }
    label input[type=number] {
        width:calc(100% - 2em);

        &:is([placeholder=CD],[placeholder=GP],[placeholder=CAR]) {
            color:darkgray;
        }
    }
    label+data {
        border-bottom:.1rem solid var(--fg);
        font-size:.7em;
        align-self:end;
    }
    h3 {
        grid-area:8/3/10/5;
        text-align:right;
        margin-bottom:-.2em;

        span {
            font-size:.8em;
            display:block;
        }
        span~* {
            font-size:1.15em; line-height:1;
            margin-bottom:-.2em;
        }
    }
}
:host(char-form.delta) .boost,
:host(char-form.runes) .formula {
    display:none;
}
:host(char-form.delta) form {
    grid-template:auto / repeat(4,1fr);
}
:host(char-form.runes) form {
    grid-template:auto / 5fr 3fr 5fr 3fr;
}

:host(buff-form) form {
    grid-template-columns:1fr 1fr; gap: .2em .5em;
    margin: .5em auto;
    font-size:.8rem;

    >label {
        display:flex; justify-content:space-between; align-items:center;
    }
    input {
        width:3.5em;
        background:lightgoldenrodyellow;

        &:is([name=skill],[name=TD],[name=BAP],[name=monsterLv],[name=Lv]) {
            background:rgb(169, 230, 204)
        }
    }
    section {
        grid-column: 1/-1; justify-self:center;
        max-width:23em;
        margin-top:.5em; padding:0;
    }
    img {
        &:not([src^='/rune']) {
            height:4.5em; 
            margin:0 -.1em -.2em -.1em;
        }
        &[src^='/rune'] {
            width:2em; height:2em;
            margin:0 .2em;
        }
    }
    input:not(:checked)+label,label:has(input:is([type=checkbox],[type=radio]):not(:checked)) {
        filter:saturate(0) brightness(.6);
    }
    div {
        display:flex; justify-content:space-between; align-items:center;
        margin-top:.5em;

        data {
            width:4em;
            border-bottom:.1rem solid var(--fg);
            align-self:end;
        }
        i {line-height:1;}
        &:last-child {
            grid-column:1/-1;

        }
        prop-icon {
            font-size:1.3em;
            margin-right:.1em;

            &:not(:first-child) {
                margin-left:auto;
            }
        }
    }
}
:host(rune-form) form {
    display:grid; grid-template:3em auto / repeat(5, 3em); 
    justify-content:center;
    margin-top:.5em;
    font-size:1.1em;
    
    label:not(.rune-slot) {
        background:url(/rune/shape/0.webp) center / contain no-repeat;
        width:3em; height:3em; display:inline-flex; align-items:center; justify-content:center;
        position:relative;
    }
    label:nth-of-type(2):has([name=shape]),fieldset:nth-of-type(2) label:has(input) {background-image:url(/rune/shape/3.webp)};
    label:nth-of-type(3):has([name=shape]),fieldset:nth-of-type(3) label:has(input) {background-image:url(/rune/shape/4.webp)};
    label:nth-of-type(4):has([name=shape]),fieldset:nth-of-type(4) label:has(input) {background-image:url(/rune/shape/5.webp)};
    label:nth-of-type(5):has([name=shape]),fieldset:nth-of-type(5) label:has(input) {background-image:url(/rune/shape/6.webp)};

    &>label:has(input:checked)::before {
        content:'▼'; color:yellow; font-size:.5em;
        position:absolute; top:-.5em; left:50%; transform:translateX(-50%);
    }
    label data {
        font-size:.8em;
        align-self:end;
    }
    label:has(input:checked)+fieldset {
        visibility:visible;
    }
    fieldset {
        width:11.75em;
        visibility:hidden;
        margin:.5em auto;
        grid-area:2/1/3/6;
        position:relative;
    }
    figure {
        width:2em; height:calc(50% - 1em);
        display:flex; flex-direction:column; justify-content:space-evenly;
        border:.15rem solid; border-radius:.2em;
    }
    figure:first-of-type {
        grid-area:2/1/3/2; align-self:start;
        border-right:none;
        margin-top:1em; padding-left:.25em;
    }
    figure:last-of-type {
        grid-area:2/5/3/6; justify-self:flex-end;
        align-items:flex-end;
        border-left:none;
        margin-bottom:1em; padding-right:.25em;
    }
    input:not([type]) {
        display:block;
    }
    .from input {
        width:100%;
    }
    .to input {
        width:calc(100% - 1em);
        z-index:1; position:relative;
    }
    em {
        font-size:.7em; line-height:.9;
        min-height:2em; max-height:2em;
        display:block;
        padding-top:.2em;
        z-index:1; position:relative;
    }
    em:not(:empty)::before {
        content:'❗';
    }
    .from em {
        text-align:left;
    }
    .to em {
        text-align:right;
    }
    select {
        position:absolute; right:0; bottom:0;
        width:100%;
        appearance:none;
        background:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0,-100 120,250'><polygon points='0,0 100,0 50,50'/></svg>") right center / contain no-repeat,white;
    }
    .change {
        display:flex; justify-content:space-between; align-items:center;
    }
    label:has(input[id|=switch]:not(:checked)),label:has(input[id|=switch]:not(:checked))~* {
        filter:saturate(0) brightness(0.5);
    }
}